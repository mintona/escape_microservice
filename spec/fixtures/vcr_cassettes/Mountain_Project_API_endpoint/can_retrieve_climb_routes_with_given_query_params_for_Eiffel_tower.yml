---
http_interactions:
- request:
    method: get
    uri: https://www.mountainproject.com/data/get-routes-for-lat-lon?key=200688937-3e1f4800a90a38c8a3d2d427bc7c5176&lat=48.85837009999999&lon=2.2944813&maxDiff=5.12&maxDistance=200&maxResults=50&minDiff=5.10
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 15 Mar 2020 16:25:52 GMT
      Server:
      - Apache
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - max-age=0, must-revalidate, no-cache, no-store, private
      Pragma:
      - no-cache
      X-Ap-Request-Id:
      - 7d16002b-aeb8-4476-8bc5-48ba00158faa
      Vary:
      - Accept-Encoding
      Content-Length:
      - '1219'
      Content-Type:
      - application/json
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Sun, 15 Mar 2020 16:25:53 GMT
recorded_with: VCR 5.1.0
